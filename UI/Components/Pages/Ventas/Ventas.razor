@page "/ventas"
@rendermode InteractiveServer
@inject VentasService VentasService
@inject IJSRuntime JS

<PageTitle>Ventas</PageTitle>

<div class="container">
    <h1 class="pb-3">Ventas</h1>

    <div class="row">
        <div class="col-6">
            <a href="/ventas/nuevo">
                <button type="button" class="btn btn-success">Crear Venta</button>
            </a>
        </div>
    </div>
    <div class="row">
        <table class="table">
            <thead class="thead-dark">
                <tr>
                    <th>Id</th>
                    <th>Comentarios</th>
                    <th>IdUsuario</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (Venta venta in ventas)
                {
                    <tr>
                        <td>@venta.Id</td>
                        <td>
                            @* @foreach (string comentario in @venta.Comentarios)
                            {
                                <p>@comentario</p>
                            } *@
                        </td>
                        <td>@venta.Usuario</td>
                        <td class="text-end">
                            <a href="/ventas/@venta.Id/editar" class="pe-1">
                                <button type="button" class="btn btn-info">Editar</button>
                            </a>
                            <button type="button"
                                    class="btn btn-danger"
                                    @onclick="() => RemoverVentaAsync(venta.Id)">
                                Eliminar
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    private List<Venta> ventas = [];

    protected override async Task OnInitializedAsync ()
    {
        ventas = await VentasService.ListarVentasAsync() ?? [];
    }

    private async Task RemoverVentaAsync (int id)
    {
        try
        {
            await VentasService.EliminarVentaAsync(id);
        }
        catch (Exception)
        {
            await JS.InvokeVoidAsync("logErrorConsole", "No se pudo eliminar la venta");
            return;
        }

        Venta? ventaAEliminar = ventas.FirstOrDefault(v => v.Id == id);
        if (ventaAEliminar is not null) ventas.Remove(ventaAEliminar);
    }
}
